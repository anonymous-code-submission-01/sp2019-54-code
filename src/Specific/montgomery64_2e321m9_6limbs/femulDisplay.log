λ x x0 : word64 * word64 * word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x12, x13, x11, x9, x7, x5, (x22, x23, x21, x19, x17, x15))%core,
 uint64_t x25, uint64_t x26 = mulx_u64(x5, x15);
 uint64_t x28, uint64_t x29 = mulx_u64(x5, x17);
 uint64_t x31, uint64_t x32 = mulx_u64(x5, x19);
 uint64_t x34, uint64_t x35 = mulx_u64(x5, x21);
 uint64_t x37, uint64_t x38 = mulx_u64(x5, x23);
 uint64_t x40, uint64_t x41 = mulx_u64(x5, x22);
 uint64_t x43, uint8_t x44 = addcarryx_u64(0x0, x26, x28);
 uint64_t x46, uint8_t x47 = addcarryx_u64(x44, x29, x31);
 uint64_t x49, uint8_t x50 = addcarryx_u64(x47, x32, x34);
 uint64_t x52, uint8_t x53 = addcarryx_u64(x50, x35, x37);
 uint64_t x55, uint8_t x56 = addcarryx_u64(x53, x38, x40);
 uint64_t x58, uint8_t _ = addcarryx_u64(0x0, x56, x41);
 uint64_t x61, uint64_t _ = mulx_u64(x25, 0x8e38e38e38e38e39L);
 uint64_t x64, uint64_t x65 = mulx_u64(x61, 0xfffffffffffffff7L);
 uint64_t x67, uint64_t x68 = mulx_u64(x61, 0xffffffffffffffffL);
 uint64_t x70, uint64_t x71 = mulx_u64(x61, 0xffffffffffffffffL);
 uint64_t x73, uint64_t x74 = mulx_u64(x61, 0xffffffffffffffffL);
 uint64_t x76, uint64_t x77 = mulx_u64(x61, 0xffffffffffffffffL);
 uint64_t x79, uint8_t x80 = addcarryx_u64(0x0, x65, x67);
 uint64_t x82, uint8_t x83 = addcarryx_u64(x80, x68, x70);
 uint64_t x85, uint8_t x86 = addcarryx_u64(x83, x71, x73);
 uint64_t x88, uint8_t x89 = addcarryx_u64(x86, x74, x76);
 uint64_t x91, uint8_t x92 = addcarryx_u64(x89, x77, x61);
 uint64_t _, uint8_t x95 = addcarryx_u64(0x0, x25, x64);
 uint64_t x97, uint8_t x98 = addcarryx_u64(x95, x43, x79);
 uint64_t x100, uint8_t x101 = addcarryx_u64(x98, x46, x82);
 uint64_t x103, uint8_t x104 = addcarryx_u64(x101, x49, x85);
 uint64_t x106, uint8_t x107 = addcarryx_u64(x104, x52, x88);
 uint64_t x109, uint8_t x110 = addcarryx_u64(x107, x55, x91);
 uint64_t x112, uint8_t x113 = addcarryx_u64(x110, x58, x92);
 uint64_t x115, uint64_t x116 = mulx_u64(x7, x15);
 uint64_t x118, uint64_t x119 = mulx_u64(x7, x17);
 uint64_t x121, uint64_t x122 = mulx_u64(x7, x19);
 uint64_t x124, uint64_t x125 = mulx_u64(x7, x21);
 uint64_t x127, uint64_t x128 = mulx_u64(x7, x23);
 uint64_t x130, uint64_t x131 = mulx_u64(x7, x22);
 uint64_t x133, uint8_t x134 = addcarryx_u64(0x0, x116, x118);
 uint64_t x136, uint8_t x137 = addcarryx_u64(x134, x119, x121);
 uint64_t x139, uint8_t x140 = addcarryx_u64(x137, x122, x124);
 uint64_t x142, uint8_t x143 = addcarryx_u64(x140, x125, x127);
 uint64_t x145, uint8_t x146 = addcarryx_u64(x143, x128, x130);
 uint64_t x148, uint8_t _ = addcarryx_u64(0x0, x146, x131);
 uint64_t x151, uint8_t x152 = addcarryx_u64(0x0, x97, x115);
 uint64_t x154, uint8_t x155 = addcarryx_u64(x152, x100, x133);
 uint64_t x157, uint8_t x158 = addcarryx_u64(x155, x103, x136);
 uint64_t x160, uint8_t x161 = addcarryx_u64(x158, x106, x139);
 uint64_t x163, uint8_t x164 = addcarryx_u64(x161, x109, x142);
 uint64_t x166, uint8_t x167 = addcarryx_u64(x164, x112, x145);
 uint64_t x169, uint8_t x170 = addcarryx_u64(x167, x113, x148);
 uint64_t x172, uint64_t _ = mulx_u64(x151, 0x8e38e38e38e38e39L);
 uint64_t x175, uint64_t x176 = mulx_u64(x172, 0xfffffffffffffff7L);
 uint64_t x178, uint64_t x179 = mulx_u64(x172, 0xffffffffffffffffL);
 uint64_t x181, uint64_t x182 = mulx_u64(x172, 0xffffffffffffffffL);
 uint64_t x184, uint64_t x185 = mulx_u64(x172, 0xffffffffffffffffL);
 uint64_t x187, uint64_t x188 = mulx_u64(x172, 0xffffffffffffffffL);
 uint64_t x190, uint8_t x191 = addcarryx_u64(0x0, x176, x178);
 uint64_t x193, uint8_t x194 = addcarryx_u64(x191, x179, x181);
 uint64_t x196, uint8_t x197 = addcarryx_u64(x194, x182, x184);
 uint64_t x199, uint8_t x200 = addcarryx_u64(x197, x185, x187);
 uint64_t x202, uint8_t x203 = addcarryx_u64(x200, x188, x172);
 uint64_t _, uint8_t x206 = addcarryx_u64(0x0, x151, x175);
 uint64_t x208, uint8_t x209 = addcarryx_u64(x206, x154, x190);
 uint64_t x211, uint8_t x212 = addcarryx_u64(x209, x157, x193);
 uint64_t x214, uint8_t x215 = addcarryx_u64(x212, x160, x196);
 uint64_t x217, uint8_t x218 = addcarryx_u64(x215, x163, x199);
 uint64_t x220, uint8_t x221 = addcarryx_u64(x218, x166, x202);
 uint64_t x223, uint8_t x224 = addcarryx_u64(x221, x169, x203);
 uint8_t x225 = (x224 + x170);
 uint64_t x227, uint64_t x228 = mulx_u64(x9, x15);
 uint64_t x230, uint64_t x231 = mulx_u64(x9, x17);
 uint64_t x233, uint64_t x234 = mulx_u64(x9, x19);
 uint64_t x236, uint64_t x237 = mulx_u64(x9, x21);
 uint64_t x239, uint64_t x240 = mulx_u64(x9, x23);
 uint64_t x242, uint64_t x243 = mulx_u64(x9, x22);
 uint64_t x245, uint8_t x246 = addcarryx_u64(0x0, x228, x230);
 uint64_t x248, uint8_t x249 = addcarryx_u64(x246, x231, x233);
 uint64_t x251, uint8_t x252 = addcarryx_u64(x249, x234, x236);
 uint64_t x254, uint8_t x255 = addcarryx_u64(x252, x237, x239);
 uint64_t x257, uint8_t x258 = addcarryx_u64(x255, x240, x242);
 uint64_t x260, uint8_t _ = addcarryx_u64(0x0, x258, x243);
 uint64_t x263, uint8_t x264 = addcarryx_u64(0x0, x208, x227);
 uint64_t x266, uint8_t x267 = addcarryx_u64(x264, x211, x245);
 uint64_t x269, uint8_t x270 = addcarryx_u64(x267, x214, x248);
 uint64_t x272, uint8_t x273 = addcarryx_u64(x270, x217, x251);
 uint64_t x275, uint8_t x276 = addcarryx_u64(x273, x220, x254);
 uint64_t x278, uint8_t x279 = addcarryx_u64(x276, x223, x257);
 uint64_t x281, uint8_t x282 = addcarryx_u64(x279, x225, x260);
 uint64_t x284, uint64_t _ = mulx_u64(x263, 0x8e38e38e38e38e39L);
 uint64_t x287, uint64_t x288 = mulx_u64(x284, 0xfffffffffffffff7L);
 uint64_t x290, uint64_t x291 = mulx_u64(x284, 0xffffffffffffffffL);
 uint64_t x293, uint64_t x294 = mulx_u64(x284, 0xffffffffffffffffL);
 uint64_t x296, uint64_t x297 = mulx_u64(x284, 0xffffffffffffffffL);
 uint64_t x299, uint64_t x300 = mulx_u64(x284, 0xffffffffffffffffL);
 uint64_t x302, uint8_t x303 = addcarryx_u64(0x0, x288, x290);
 uint64_t x305, uint8_t x306 = addcarryx_u64(x303, x291, x293);
 uint64_t x308, uint8_t x309 = addcarryx_u64(x306, x294, x296);
 uint64_t x311, uint8_t x312 = addcarryx_u64(x309, x297, x299);
 uint64_t x314, uint8_t x315 = addcarryx_u64(x312, x300, x284);
 uint64_t _, uint8_t x318 = addcarryx_u64(0x0, x263, x287);
 uint64_t x320, uint8_t x321 = addcarryx_u64(x318, x266, x302);
 uint64_t x323, uint8_t x324 = addcarryx_u64(x321, x269, x305);
 uint64_t x326, uint8_t x327 = addcarryx_u64(x324, x272, x308);
 uint64_t x329, uint8_t x330 = addcarryx_u64(x327, x275, x311);
 uint64_t x332, uint8_t x333 = addcarryx_u64(x330, x278, x314);
 uint64_t x335, uint8_t x336 = addcarryx_u64(x333, x281, x315);
 uint8_t x337 = (x336 + x282);
 uint64_t x339, uint64_t x340 = mulx_u64(x11, x15);
 uint64_t x342, uint64_t x343 = mulx_u64(x11, x17);
 uint64_t x345, uint64_t x346 = mulx_u64(x11, x19);
 uint64_t x348, uint64_t x349 = mulx_u64(x11, x21);
 uint64_t x351, uint64_t x352 = mulx_u64(x11, x23);
 uint64_t x354, uint64_t x355 = mulx_u64(x11, x22);
 uint64_t x357, uint8_t x358 = addcarryx_u64(0x0, x340, x342);
 uint64_t x360, uint8_t x361 = addcarryx_u64(x358, x343, x345);
 uint64_t x363, uint8_t x364 = addcarryx_u64(x361, x346, x348);
 uint64_t x366, uint8_t x367 = addcarryx_u64(x364, x349, x351);
 uint64_t x369, uint8_t x370 = addcarryx_u64(x367, x352, x354);
 uint64_t x372, uint8_t _ = addcarryx_u64(0x0, x370, x355);
 uint64_t x375, uint8_t x376 = addcarryx_u64(0x0, x320, x339);
 uint64_t x378, uint8_t x379 = addcarryx_u64(x376, x323, x357);
 uint64_t x381, uint8_t x382 = addcarryx_u64(x379, x326, x360);
 uint64_t x384, uint8_t x385 = addcarryx_u64(x382, x329, x363);
 uint64_t x387, uint8_t x388 = addcarryx_u64(x385, x332, x366);
 uint64_t x390, uint8_t x391 = addcarryx_u64(x388, x335, x369);
 uint64_t x393, uint8_t x394 = addcarryx_u64(x391, x337, x372);
 uint64_t x396, uint64_t _ = mulx_u64(x375, 0x8e38e38e38e38e39L);
 uint64_t x399, uint64_t x400 = mulx_u64(x396, 0xfffffffffffffff7L);
 uint64_t x402, uint64_t x403 = mulx_u64(x396, 0xffffffffffffffffL);
 uint64_t x405, uint64_t x406 = mulx_u64(x396, 0xffffffffffffffffL);
 uint64_t x408, uint64_t x409 = mulx_u64(x396, 0xffffffffffffffffL);
 uint64_t x411, uint64_t x412 = mulx_u64(x396, 0xffffffffffffffffL);
 uint64_t x414, uint8_t x415 = addcarryx_u64(0x0, x400, x402);
 uint64_t x417, uint8_t x418 = addcarryx_u64(x415, x403, x405);
 uint64_t x420, uint8_t x421 = addcarryx_u64(x418, x406, x408);
 uint64_t x423, uint8_t x424 = addcarryx_u64(x421, x409, x411);
 uint64_t x426, uint8_t x427 = addcarryx_u64(x424, x412, x396);
 uint64_t _, uint8_t x430 = addcarryx_u64(0x0, x375, x399);
 uint64_t x432, uint8_t x433 = addcarryx_u64(x430, x378, x414);
 uint64_t x435, uint8_t x436 = addcarryx_u64(x433, x381, x417);
 uint64_t x438, uint8_t x439 = addcarryx_u64(x436, x384, x420);
 uint64_t x441, uint8_t x442 = addcarryx_u64(x439, x387, x423);
 uint64_t x444, uint8_t x445 = addcarryx_u64(x442, x390, x426);
 uint64_t x447, uint8_t x448 = addcarryx_u64(x445, x393, x427);
 uint8_t x449 = (x448 + x394);
 uint64_t x451, uint64_t x452 = mulx_u64(x13, x15);
 uint64_t x454, uint64_t x455 = mulx_u64(x13, x17);
 uint64_t x457, uint64_t x458 = mulx_u64(x13, x19);
 uint64_t x460, uint64_t x461 = mulx_u64(x13, x21);
 uint64_t x463, uint64_t x464 = mulx_u64(x13, x23);
 uint64_t x466, uint64_t x467 = mulx_u64(x13, x22);
 uint64_t x469, uint8_t x470 = addcarryx_u64(0x0, x452, x454);
 uint64_t x472, uint8_t x473 = addcarryx_u64(x470, x455, x457);
 uint64_t x475, uint8_t x476 = addcarryx_u64(x473, x458, x460);
 uint64_t x478, uint8_t x479 = addcarryx_u64(x476, x461, x463);
 uint64_t x481, uint8_t x482 = addcarryx_u64(x479, x464, x466);
 uint64_t x484, uint8_t _ = addcarryx_u64(0x0, x482, x467);
 uint64_t x487, uint8_t x488 = addcarryx_u64(0x0, x432, x451);
 uint64_t x490, uint8_t x491 = addcarryx_u64(x488, x435, x469);
 uint64_t x493, uint8_t x494 = addcarryx_u64(x491, x438, x472);
 uint64_t x496, uint8_t x497 = addcarryx_u64(x494, x441, x475);
 uint64_t x499, uint8_t x500 = addcarryx_u64(x497, x444, x478);
 uint64_t x502, uint8_t x503 = addcarryx_u64(x500, x447, x481);
 uint64_t x505, uint8_t x506 = addcarryx_u64(x503, x449, x484);
 uint64_t x508, uint64_t _ = mulx_u64(x487, 0x8e38e38e38e38e39L);
 uint64_t x511, uint64_t x512 = mulx_u64(x508, 0xfffffffffffffff7L);
 uint64_t x514, uint64_t x515 = mulx_u64(x508, 0xffffffffffffffffL);
 uint64_t x517, uint64_t x518 = mulx_u64(x508, 0xffffffffffffffffL);
 uint64_t x520, uint64_t x521 = mulx_u64(x508, 0xffffffffffffffffL);
 uint64_t x523, uint64_t x524 = mulx_u64(x508, 0xffffffffffffffffL);
 uint64_t x526, uint8_t x527 = addcarryx_u64(0x0, x512, x514);
 uint64_t x529, uint8_t x530 = addcarryx_u64(x527, x515, x517);
 uint64_t x532, uint8_t x533 = addcarryx_u64(x530, x518, x520);
 uint64_t x535, uint8_t x536 = addcarryx_u64(x533, x521, x523);
 uint64_t x538, uint8_t x539 = addcarryx_u64(x536, x524, x508);
 uint64_t _, uint8_t x542 = addcarryx_u64(0x0, x487, x511);
 uint64_t x544, uint8_t x545 = addcarryx_u64(x542, x490, x526);
 uint64_t x547, uint8_t x548 = addcarryx_u64(x545, x493, x529);
 uint64_t x550, uint8_t x551 = addcarryx_u64(x548, x496, x532);
 uint64_t x553, uint8_t x554 = addcarryx_u64(x551, x499, x535);
 uint64_t x556, uint8_t x557 = addcarryx_u64(x554, x502, x538);
 uint64_t x559, uint8_t x560 = addcarryx_u64(x557, x505, x539);
 uint8_t x561 = (x560 + x506);
 uint64_t x563, uint64_t x564 = mulx_u64(x12, x15);
 uint64_t x566, uint64_t x567 = mulx_u64(x12, x17);
 uint64_t x569, uint64_t x570 = mulx_u64(x12, x19);
 uint64_t x572, uint64_t x573 = mulx_u64(x12, x21);
 uint64_t x575, uint64_t x576 = mulx_u64(x12, x23);
 uint64_t x578, uint64_t x579 = mulx_u64(x12, x22);
 uint64_t x581, uint8_t x582 = addcarryx_u64(0x0, x564, x566);
 uint64_t x584, uint8_t x585 = addcarryx_u64(x582, x567, x569);
 uint64_t x587, uint8_t x588 = addcarryx_u64(x585, x570, x572);
 uint64_t x590, uint8_t x591 = addcarryx_u64(x588, x573, x575);
 uint64_t x593, uint8_t x594 = addcarryx_u64(x591, x576, x578);
 uint64_t x596, uint8_t _ = addcarryx_u64(0x0, x594, x579);
 uint64_t x599, uint8_t x600 = addcarryx_u64(0x0, x544, x563);
 uint64_t x602, uint8_t x603 = addcarryx_u64(x600, x547, x581);
 uint64_t x605, uint8_t x606 = addcarryx_u64(x603, x550, x584);
 uint64_t x608, uint8_t x609 = addcarryx_u64(x606, x553, x587);
 uint64_t x611, uint8_t x612 = addcarryx_u64(x609, x556, x590);
 uint64_t x614, uint8_t x615 = addcarryx_u64(x612, x559, x593);
 uint64_t x617, uint8_t x618 = addcarryx_u64(x615, x561, x596);
 uint64_t x620, uint64_t _ = mulx_u64(x599, 0x8e38e38e38e38e39L);
 uint64_t x623, uint64_t x624 = mulx_u64(x620, 0xfffffffffffffff7L);
 uint64_t x626, uint64_t x627 = mulx_u64(x620, 0xffffffffffffffffL);
 uint64_t x629, uint64_t x630 = mulx_u64(x620, 0xffffffffffffffffL);
 uint64_t x632, uint64_t x633 = mulx_u64(x620, 0xffffffffffffffffL);
 uint64_t x635, uint64_t x636 = mulx_u64(x620, 0xffffffffffffffffL);
 uint64_t x638, uint8_t x639 = addcarryx_u64(0x0, x624, x626);
 uint64_t x641, uint8_t x642 = addcarryx_u64(x639, x627, x629);
 uint64_t x644, uint8_t x645 = addcarryx_u64(x642, x630, x632);
 uint64_t x647, uint8_t x648 = addcarryx_u64(x645, x633, x635);
 uint64_t x650, uint8_t x651 = addcarryx_u64(x648, x636, x620);
 uint64_t _, uint8_t x654 = addcarryx_u64(0x0, x599, x623);
 uint64_t x656, uint8_t x657 = addcarryx_u64(x654, x602, x638);
 uint64_t x659, uint8_t x660 = addcarryx_u64(x657, x605, x641);
 uint64_t x662, uint8_t x663 = addcarryx_u64(x660, x608, x644);
 uint64_t x665, uint8_t x666 = addcarryx_u64(x663, x611, x647);
 uint64_t x668, uint8_t x669 = addcarryx_u64(x666, x614, x650);
 uint64_t x671, uint8_t x672 = addcarryx_u64(x669, x617, x651);
 uint8_t x673 = (x672 + x618);
 uint64_t x675, uint8_t x676 = subborrow_u64(0x0, x656, 0xfffffffffffffff7L);
 uint64_t x678, uint8_t x679 = subborrow_u64(x676, x659, 0xffffffffffffffffL);
 uint64_t x681, uint8_t x682 = subborrow_u64(x679, x662, 0xffffffffffffffffL);
 uint64_t x684, uint8_t x685 = subborrow_u64(x682, x665, 0xffffffffffffffffL);
 uint64_t x687, uint8_t x688 = subborrow_u64(x685, x668, 0xffffffffffffffffL);
 uint64_t x690, uint8_t x691 = subborrow_u64(x688, x671, 0x1);
 uint64_t _, uint8_t x694 = subborrow_u64(x691, x673, 0x0);
 uint64_t x695 = cmovznz64(x694, x690, x671);
 uint64_t x696 = cmovznz64(x694, x687, x668);
 uint64_t x697 = cmovznz64(x694, x684, x665);
 uint64_t x698 = cmovznz64(x694, x681, x662);
 uint64_t x699 = cmovznz64(x694, x678, x659);
 uint64_t x700 = cmovznz64(x694, x675, x656);
 return (x695, x696, x697, x698, x699, x700))
(x, x0)%core
     : word64 * word64 * word64 * word64 * word64 * word64 → word64 * word64 * word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)

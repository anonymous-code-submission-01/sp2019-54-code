λ x : word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x5, x6, x4, x2)%core,
 uint128_t x7 = (((uint128_t)(x4 + x5) * (x4 + x5)) - ((uint128_t)x4 * x4));
 uint128_t x8 = ((((uint128_t)(x2 + x6) * (x4 + x5)) + ((uint128_t)(x4 + x5) * (x2 + x6))) - (((uint128_t)x2 * x4) + ((uint128_t)x4 * x2)));
 uint128_t x9 = (((uint128_t)(x2 + x6) * (x2 + x6)) - ((uint128_t)x2 * x2));
 uint128_t x10 = (((((uint128_t)x4 * x4) + ((uint128_t)x5 * x5)) + x9) + x7);
 uint128_t x11 = ((((uint128_t)x2 * x4) + ((uint128_t)x4 * x2)) + (((uint128_t)x6 * x5) + ((uint128_t)x5 * x6)));
 uint128_t x12 = ((((uint128_t)x2 * x2) + ((uint128_t)x6 * x6)) + x7);
 uint64_t x13 = (uint64_t) (x11 >> 0x36);
 uint64_t x14 = ((uint64_t)x11 & 0x3fffffffffffff);
 uint64_t x15 = (uint64_t) (x8 >> 0x36);
 uint64_t x16 = ((uint64_t)x8 & 0x3fffffffffffff);
 uint128_t x17 = (((uint128_t)0x40000000000000 * x15) + x16);
 uint64_t x18 = (uint64_t) (x17 >> 0x36);
 uint64_t x19 = ((uint64_t)x17 & 0x3fffffffffffff);
 uint128_t x20 = ((x13 + x10) + x18);
 uint64_t x21 = (uint64_t) (x20 >> 0x36);
 uint64_t x22 = ((uint64_t)x20 & 0x3fffffffffffff);
 uint128_t x23 = (x12 + x18);
 uint64_t x24 = (uint64_t) (x23 >> 0x36);
 uint64_t x25 = ((uint64_t)x23 & 0x3fffffffffffff);
 uint64_t x26 = (x21 + x19);
 uint64_t x27 = (x26 >> 0x36);
 uint64_t x28 = (x26 & 0x3fffffffffffff);
 uint64_t x29 = (x24 + x14);
 uint64_t x30 = (x29 >> 0x36);
 uint64_t x31 = (x29 & 0x3fffffffffffff);
 uint64_t x32 = ((0x40000000000000 * x27) + x28);
 uint64_t x33 = (x32 >> 0x36);
 uint64_t x34 = (x32 & 0x3fffffffffffff);
 uint64_t x35 = ((x30 + x22) + x33);
 uint64_t x36 = (x35 >> 0x36);
 uint64_t x37 = (x35 & 0x3fffffffffffff);
 uint64_t x38 = (x25 + x33);
 uint64_t x39 = (x38 >> 0x36);
 uint64_t x40 = (x38 & 0x3fffffffffffff);
 return ((x36 + x34), Return x37, (x39 + x31), Return x40))
x
     : word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t)

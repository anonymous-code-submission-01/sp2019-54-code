λ x : word64 * word64 * word64 * word64 * word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x13, x14, x12, x10, x8, x6, x4, x2)%core,
 uint128_t x15 = (((uint128_t)x2 * x13) + (((uint128_t)x4 * x14) + (((uint128_t)x6 * x12) + (((uint128_t)x8 * x10) + (((uint128_t)x10 * x8) + (((uint128_t)x12 * x6) + (((uint128_t)x14 * x4) + ((uint128_t)x13 * x2))))))));
 uint128_t x16 = ((((uint128_t)x2 * x14) + (((uint128_t)x4 * x12) + (((uint128_t)x6 * x10) + (((uint128_t)x8 * x8) + (((uint128_t)x10 * x6) + (((uint128_t)x12 * x4) + ((uint128_t)x14 * x2))))))) + (0x13d * ((uint128_t)x13 * x13)));
 uint128_t x17 = ((((uint128_t)x2 * x12) + (((uint128_t)x4 * x10) + (((uint128_t)x6 * x8) + (((uint128_t)x8 * x6) + (((uint128_t)x10 * x4) + ((uint128_t)x12 * x2)))))) + (0x13d * (((uint128_t)x14 * x13) + ((uint128_t)x13 * x14))));
 uint128_t x18 = ((((uint128_t)x2 * x10) + (((uint128_t)x4 * x8) + (((uint128_t)x6 * x6) + (((uint128_t)x8 * x4) + ((uint128_t)x10 * x2))))) + (0x13d * (((uint128_t)x12 * x13) + (((uint128_t)x14 * x14) + ((uint128_t)x13 * x12)))));
 uint128_t x19 = ((((uint128_t)x2 * x8) + (((uint128_t)x4 * x6) + (((uint128_t)x6 * x4) + ((uint128_t)x8 * x2)))) + (0x13d * (((uint128_t)x10 * x13) + (((uint128_t)x12 * x14) + (((uint128_t)x14 * x12) + ((uint128_t)x13 * x10))))));
 uint128_t x20 = ((((uint128_t)x2 * x6) + (((uint128_t)x4 * x4) + ((uint128_t)x6 * x2))) + (0x13d * (((uint128_t)x8 * x13) + (((uint128_t)x10 * x14) + (((uint128_t)x12 * x12) + (((uint128_t)x14 * x10) + ((uint128_t)x13 * x8)))))));
 uint128_t x21 = ((((uint128_t)x2 * x4) + ((uint128_t)x4 * x2)) + (0x13d * (((uint128_t)x6 * x13) + (((uint128_t)x8 * x14) + (((uint128_t)x10 * x12) + (((uint128_t)x12 * x10) + (((uint128_t)x14 * x8) + ((uint128_t)x13 * x6))))))));
 uint128_t x22 = (((uint128_t)x2 * x2) + (0x13d * (((uint128_t)x4 * x13) + (((uint128_t)x6 * x14) + (((uint128_t)x8 * x12) + (((uint128_t)x10 * x10) + (((uint128_t)x12 * x8) + (((uint128_t)x14 * x6) + ((uint128_t)x13 * x4)))))))));
 uint64_t x23 = (uint64_t) (x22 >> 0x30);
 uint64_t x24 = ((uint64_t)x22 & 0xffffffffffff);
 uint128_t x25 = (x23 + x21);
 uint64_t x26 = (uint64_t) (x25 >> 0x30);
 uint64_t x27 = ((uint64_t)x25 & 0xffffffffffff);
 uint128_t x28 = (x26 + x20);
 uint64_t x29 = (uint64_t) (x28 >> 0x30);
 uint64_t x30 = ((uint64_t)x28 & 0xffffffffffff);
 uint128_t x31 = (x29 + x19);
 uint64_t x32 = (uint64_t) (x31 >> 0x30);
 uint64_t x33 = ((uint64_t)x31 & 0xffffffffffff);
 uint128_t x34 = (x32 + x18);
 uint64_t x35 = (uint64_t) (x34 >> 0x30);
 uint64_t x36 = ((uint64_t)x34 & 0xffffffffffff);
 uint128_t x37 = (x35 + x17);
 uint64_t x38 = (uint64_t) (x37 >> 0x30);
 uint64_t x39 = ((uint64_t)x37 & 0xffffffffffff);
 uint128_t x40 = (x38 + x16);
 uint64_t x41 = (uint64_t) (x40 >> 0x30);
 uint64_t x42 = ((uint64_t)x40 & 0xffffffffffff);
 uint128_t x43 = (x41 + x15);
 uint64_t x44 = (uint64_t) (x43 >> 0x30);
 uint64_t x45 = ((uint64_t)x43 & 0xffffffffffff);
 uint64_t x46 = (x24 + (0x13d * x44));
 uint64_t x47 = (x46 >> 0x30);
 uint64_t x48 = (x46 & 0xffffffffffff);
 uint64_t x49 = (x47 + x27);
 uint64_t x50 = (x49 >> 0x30);
 uint64_t x51 = (x49 & 0xffffffffffff);
 return (Return x45, Return x42, Return x39, Return x36, Return x33, (x50 + x30), Return x51, Return x48))
x
     : word64 * word64 * word64 * word64 * word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)

λ x x0 : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x32, x33, x31, x29, x27, x25, x23, x21, x19, x17, x15, x13, x11, x9, x7, x5, (x62, x63, x61, x59, x57, x55, x53, x51, x49, x47, x45, x43, x41, x39, x37, x35))%core,
 uint32_t x65, uint8_t x66 = addcarryx_u32(0x0, x5, x35);
 uint32_t x68, uint8_t x69 = addcarryx_u32(x66, x7, x37);
 uint32_t x71, uint8_t x72 = addcarryx_u32(x69, x9, x39);
 uint32_t x74, uint8_t x75 = addcarryx_u32(x72, x11, x41);
 uint32_t x77, uint8_t x78 = addcarryx_u32(x75, x13, x43);
 uint32_t x80, uint8_t x81 = addcarryx_u32(x78, x15, x45);
 uint32_t x83, uint8_t x84 = addcarryx_u32(x81, x17, x47);
 uint32_t x86, uint8_t x87 = addcarryx_u32(x84, x19, x49);
 uint32_t x89, uint8_t x90 = addcarryx_u32(x87, x21, x51);
 uint32_t x92, uint8_t x93 = addcarryx_u32(x90, x23, x53);
 uint32_t x95, uint8_t x96 = addcarryx_u32(x93, x25, x55);
 uint32_t x98, uint8_t x99 = addcarryx_u32(x96, x27, x57);
 uint32_t x101, uint8_t x102 = addcarryx_u32(x99, x29, x59);
 uint32_t x104, uint8_t x105 = addcarryx_u32(x102, x31, x61);
 uint32_t x107, uint8_t x108 = addcarryx_u32(x105, x33, x63);
 uint32_t x110, uint8_t x111 = addcarryx_u32(x108, x32, x62);
 uint32_t x113, uint8_t x114 = subborrow_u32(0x0, x65, 0xfffffe1f);
 uint32_t x116, uint8_t x117 = subborrow_u32(x114, x68, 0xffffffff);
 uint32_t x119, uint8_t x120 = subborrow_u32(x117, x71, 0xffffffff);
 uint32_t x122, uint8_t x123 = subborrow_u32(x120, x74, 0xffffffff);
 uint32_t x125, uint8_t x126 = subborrow_u32(x123, x77, 0xffffffff);
 uint32_t x128, uint8_t x129 = subborrow_u32(x126, x80, 0xffffffff);
 uint32_t x131, uint8_t x132 = subborrow_u32(x129, x83, 0xffffffff);
 uint32_t x134, uint8_t x135 = subborrow_u32(x132, x86, 0xffffffff);
 uint32_t x137, uint8_t x138 = subborrow_u32(x135, x89, 0xffffffff);
 uint32_t x140, uint8_t x141 = subborrow_u32(x138, x92, 0xffffffff);
 uint32_t x143, uint8_t x144 = subborrow_u32(x141, x95, 0xffffffff);
 uint32_t x146, uint8_t x147 = subborrow_u32(x144, x98, 0xffffffff);
 uint32_t x149, uint8_t x150 = subborrow_u32(x147, x101, 0xffffffff);
 uint32_t x152, uint8_t x153 = subborrow_u32(x150, x104, 0xffffffff);
 uint32_t x155, uint8_t x156 = subborrow_u32(x153, x107, 0xffffffff);
 uint32_t x158, uint8_t x159 = subborrow_u32(x156, x110, 0x7fffffff);
 uint32_t _, uint8_t x162 = subborrow_u32(x159, x111, 0x0);
 uint32_t x163 = cmovznz32(x162, x158, x110);
 uint32_t x164 = cmovznz32(x162, x155, x107);
 uint32_t x165 = cmovznz32(x162, x152, x104);
 uint32_t x166 = cmovznz32(x162, x149, x101);
 uint32_t x167 = cmovznz32(x162, x146, x98);
 uint32_t x168 = cmovznz32(x162, x143, x95);
 uint32_t x169 = cmovznz32(x162, x140, x92);
 uint32_t x170 = cmovznz32(x162, x137, x89);
 uint32_t x171 = cmovznz32(x162, x134, x86);
 uint32_t x172 = cmovznz32(x162, x131, x83);
 uint32_t x173 = cmovznz32(x162, x128, x80);
 uint32_t x174 = cmovznz32(x162, x125, x77);
 uint32_t x175 = cmovznz32(x162, x122, x74);
 uint32_t x176 = cmovznz32(x162, x119, x71);
 uint32_t x177 = cmovznz32(x162, x116, x68);
 uint32_t x178 = cmovznz32(x162, x113, x65);
 return (x163, x164, x165, x166, x167, x168, x169, x170, x171, x172, x173, x174, x175, x176, x177, x178))
(x, x0)%core
     : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 → word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 → ReturnType (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)

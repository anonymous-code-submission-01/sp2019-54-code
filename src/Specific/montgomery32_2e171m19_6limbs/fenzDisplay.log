λ x : word32 * word32 * word32 * word32 * word32 * word32,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x9, x10, x8, x6, x4, x2)%core,
 uint32_t x11 = (x10 | x9);
 uint32_t x12 = (x8 | x11);
 uint32_t x13 = (x6 | x12);
 uint32_t x14 = (x4 | x13);
 uint32_t x15 = (x2 | x14);
 return x15)
x
     : word32 * word32 * word32 * word32 * word32 * word32 → ReturnType uint32_t

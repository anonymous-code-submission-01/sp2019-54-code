λ x : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x19, x20, x18, x16, x14, x12, x10, x8, x6, x4, x2)%core,
 uint32_t x21 = (x2 >> 0x18);
 uint32_t x22 = (x2 & 0xffffff);
 uint32_t x23 = (x21 + x4);
 uint32_t x24 = (x23 >> 0x17);
 uint32_t x25 = (x23 & 0x7fffff);
 uint32_t x26 = (x24 + x6);
 uint32_t x27 = (x26 >> 0x17);
 uint32_t x28 = (x26 & 0x7fffff);
 uint32_t x29 = (x27 + x8);
 uint32_t x30 = (x29 >> 0x17);
 uint32_t x31 = (x29 & 0x7fffff);
 uint32_t x32 = (x30 + x10);
 uint32_t x33 = (x32 >> 0x17);
 uint32_t x34 = (x32 & 0x7fffff);
 uint32_t x35 = (x33 + x12);
 uint32_t x36 = (x35 >> 0x18);
 uint32_t x37 = (x35 & 0xffffff);
 uint32_t x38 = (x36 + x14);
 uint32_t x39 = (x38 >> 0x17);
 uint32_t x40 = (x38 & 0x7fffff);
 uint32_t x41 = (x39 + x16);
 uint32_t x42 = (x41 >> 0x17);
 uint32_t x43 = (x41 & 0x7fffff);
 uint32_t x44 = (x42 + x18);
 uint32_t x45 = (x44 >> 0x17);
 uint32_t x46 = (x44 & 0x7fffff);
 uint32_t x47 = (x45 + x20);
 uint32_t x48 = (x47 >> 0x17);
 uint32_t x49 = (x47 & 0x7fffff);
 uint32_t x50 = (x48 + x19);
 uint32_t x51 = (x50 >> 0x17);
 uint32_t x52 = (x50 & 0x7fffff);
 uint32_t x53 = (x22 + (0x13 * x51));
 uint32_t x54 = (x53 >> 0x18);
 uint32_t x55 = (x53 & 0xffffff);
 uint32_t x56 = (x54 + x25);
 uint32_t x57 = (x56 >> 0x17);
 uint32_t x58 = (x56 & 0x7fffff);
 return (Return x52, Return x49, Return x46, Return x43, Return x40, Return x37, Return x34, Return x31, (x57 + x28), Return x58, Return x55))
x
     : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 → ReturnType (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)

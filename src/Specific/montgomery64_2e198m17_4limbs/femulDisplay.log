λ x x0 : word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x8, x9, x7, x5, (x14, x15, x13, x11))%core,
 uint64_t x17, uint64_t x18 = mulx_u64(x5, x11);
 uint64_t x20, uint64_t x21 = mulx_u64(x5, x13);
 uint64_t x23, uint64_t x24 = mulx_u64(x5, x15);
 uint64_t x26, uint64_t x27 = mulx_u64(x5, x14);
 uint64_t x29, uint8_t x30 = addcarryx_u64(0x0, x18, x20);
 uint64_t x32, uint8_t x33 = addcarryx_u64(x30, x21, x23);
 uint64_t x35, uint8_t x36 = addcarryx_u64(x33, x24, x26);
 uint64_t x38, uint8_t _ = addcarryx_u64(0x0, x36, x27);
 uint64_t x41, uint64_t _ = mulx_u64(x17, 0xf0f0f0f0f0f0f0f1L);
 uint64_t x44, uint64_t x45 = mulx_u64(x41, 0xffffffffffffffefL);
 uint64_t x47, uint64_t x48 = mulx_u64(x41, 0xffffffffffffffffL);
 uint64_t x50, uint64_t x51 = mulx_u64(x41, 0xffffffffffffffffL);
 uint64_t x53, uint8_t x54 = mulx_u64_out_u8(x41, 0x3f);
 uint64_t x56, uint8_t x57 = addcarryx_u64(0x0, x45, x47);
 uint64_t x59, uint8_t x60 = addcarryx_u64(x57, x48, x50);
 uint64_t x62, uint8_t x63 = addcarryx_u64(x60, x51, x53);
 uint8_t x64 = (x63 + x54);
 uint64_t _, uint8_t x67 = addcarryx_u64(0x0, x17, x44);
 uint64_t x69, uint8_t x70 = addcarryx_u64(x67, x29, x56);
 uint64_t x72, uint8_t x73 = addcarryx_u64(x70, x32, x59);
 uint64_t x75, uint8_t x76 = addcarryx_u64(x73, x35, x62);
 uint64_t x78, uint8_t x79 = addcarryx_u64(x76, x38, x64);
 uint64_t x81, uint64_t x82 = mulx_u64(x7, x11);
 uint64_t x84, uint64_t x85 = mulx_u64(x7, x13);
 uint64_t x87, uint64_t x88 = mulx_u64(x7, x15);
 uint64_t x90, uint64_t x91 = mulx_u64(x7, x14);
 uint64_t x93, uint8_t x94 = addcarryx_u64(0x0, x82, x84);
 uint64_t x96, uint8_t x97 = addcarryx_u64(x94, x85, x87);
 uint64_t x99, uint8_t x100 = addcarryx_u64(x97, x88, x90);
 uint64_t x102, uint8_t _ = addcarryx_u64(0x0, x100, x91);
 uint64_t x105, uint8_t x106 = addcarryx_u64(0x0, x69, x81);
 uint64_t x108, uint8_t x109 = addcarryx_u64(x106, x72, x93);
 uint64_t x111, uint8_t x112 = addcarryx_u64(x109, x75, x96);
 uint64_t x114, uint8_t x115 = addcarryx_u64(x112, x78, x99);
 uint64_t x117, uint8_t x118 = addcarryx_u64(x115, x79, x102);
 uint64_t x120, uint64_t _ = mulx_u64(x105, 0xf0f0f0f0f0f0f0f1L);
 uint64_t x123, uint64_t x124 = mulx_u64(x120, 0xffffffffffffffefL);
 uint64_t x126, uint64_t x127 = mulx_u64(x120, 0xffffffffffffffffL);
 uint64_t x129, uint64_t x130 = mulx_u64(x120, 0xffffffffffffffffL);
 uint64_t x132, uint8_t x133 = mulx_u64_out_u8(x120, 0x3f);
 uint64_t x135, uint8_t x136 = addcarryx_u64(0x0, x124, x126);
 uint64_t x138, uint8_t x139 = addcarryx_u64(x136, x127, x129);
 uint64_t x141, uint8_t x142 = addcarryx_u64(x139, x130, x132);
 uint8_t x143 = (x142 + x133);
 uint64_t _, uint8_t x146 = addcarryx_u64(0x0, x105, x123);
 uint64_t x148, uint8_t x149 = addcarryx_u64(x146, x108, x135);
 uint64_t x151, uint8_t x152 = addcarryx_u64(x149, x111, x138);
 uint64_t x154, uint8_t x155 = addcarryx_u64(x152, x114, x141);
 uint64_t x157, uint8_t x158 = addcarryx_u64(x155, x117, x143);
 uint8_t x159 = (x158 + x118);
 uint64_t x161, uint64_t x162 = mulx_u64(x9, x11);
 uint64_t x164, uint64_t x165 = mulx_u64(x9, x13);
 uint64_t x167, uint64_t x168 = mulx_u64(x9, x15);
 uint64_t x170, uint64_t x171 = mulx_u64(x9, x14);
 uint64_t x173, uint8_t x174 = addcarryx_u64(0x0, x162, x164);
 uint64_t x176, uint8_t x177 = addcarryx_u64(x174, x165, x167);
 uint64_t x179, uint8_t x180 = addcarryx_u64(x177, x168, x170);
 uint64_t x182, uint8_t _ = addcarryx_u64(0x0, x180, x171);
 uint64_t x185, uint8_t x186 = addcarryx_u64(0x0, x148, x161);
 uint64_t x188, uint8_t x189 = addcarryx_u64(x186, x151, x173);
 uint64_t x191, uint8_t x192 = addcarryx_u64(x189, x154, x176);
 uint64_t x194, uint8_t x195 = addcarryx_u64(x192, x157, x179);
 uint64_t x197, uint8_t x198 = addcarryx_u64(x195, x159, x182);
 uint64_t x200, uint64_t _ = mulx_u64(x185, 0xf0f0f0f0f0f0f0f1L);
 uint64_t x203, uint64_t x204 = mulx_u64(x200, 0xffffffffffffffefL);
 uint64_t x206, uint64_t x207 = mulx_u64(x200, 0xffffffffffffffffL);
 uint64_t x209, uint64_t x210 = mulx_u64(x200, 0xffffffffffffffffL);
 uint64_t x212, uint8_t x213 = mulx_u64_out_u8(x200, 0x3f);
 uint64_t x215, uint8_t x216 = addcarryx_u64(0x0, x204, x206);
 uint64_t x218, uint8_t x219 = addcarryx_u64(x216, x207, x209);
 uint64_t x221, uint8_t x222 = addcarryx_u64(x219, x210, x212);
 uint8_t x223 = (x222 + x213);
 uint64_t _, uint8_t x226 = addcarryx_u64(0x0, x185, x203);
 uint64_t x228, uint8_t x229 = addcarryx_u64(x226, x188, x215);
 uint64_t x231, uint8_t x232 = addcarryx_u64(x229, x191, x218);
 uint64_t x234, uint8_t x235 = addcarryx_u64(x232, x194, x221);
 uint64_t x237, uint8_t x238 = addcarryx_u64(x235, x197, x223);
 uint8_t x239 = (x238 + x198);
 uint64_t x241, uint64_t x242 = mulx_u64(x8, x11);
 uint64_t x244, uint64_t x245 = mulx_u64(x8, x13);
 uint64_t x247, uint64_t x248 = mulx_u64(x8, x15);
 uint64_t x250, uint64_t x251 = mulx_u64(x8, x14);
 uint64_t x253, uint8_t x254 = addcarryx_u64(0x0, x242, x244);
 uint64_t x256, uint8_t x257 = addcarryx_u64(x254, x245, x247);
 uint64_t x259, uint8_t x260 = addcarryx_u64(x257, x248, x250);
 uint64_t x262, uint8_t _ = addcarryx_u64(0x0, x260, x251);
 uint64_t x265, uint8_t x266 = addcarryx_u64(0x0, x228, x241);
 uint64_t x268, uint8_t x269 = addcarryx_u64(x266, x231, x253);
 uint64_t x271, uint8_t x272 = addcarryx_u64(x269, x234, x256);
 uint64_t x274, uint8_t x275 = addcarryx_u64(x272, x237, x259);
 uint64_t x277, uint8_t x278 = addcarryx_u64(x275, x239, x262);
 uint64_t x280, uint64_t _ = mulx_u64(x265, 0xf0f0f0f0f0f0f0f1L);
 uint64_t x283, uint64_t x284 = mulx_u64(x280, 0xffffffffffffffefL);
 uint64_t x286, uint64_t x287 = mulx_u64(x280, 0xffffffffffffffffL);
 uint64_t x289, uint64_t x290 = mulx_u64(x280, 0xffffffffffffffffL);
 uint64_t x292, uint8_t x293 = mulx_u64_out_u8(x280, 0x3f);
 uint64_t x295, uint8_t x296 = addcarryx_u64(0x0, x284, x286);
 uint64_t x298, uint8_t x299 = addcarryx_u64(x296, x287, x289);
 uint64_t x301, uint8_t x302 = addcarryx_u64(x299, x290, x292);
 uint8_t x303 = (x302 + x293);
 uint64_t _, uint8_t x306 = addcarryx_u64(0x0, x265, x283);
 uint64_t x308, uint8_t x309 = addcarryx_u64(x306, x268, x295);
 uint64_t x311, uint8_t x312 = addcarryx_u64(x309, x271, x298);
 uint64_t x314, uint8_t x315 = addcarryx_u64(x312, x274, x301);
 uint64_t x317, uint8_t x318 = addcarryx_u64(x315, x277, x303);
 uint8_t x319 = (x318 + x278);
 uint64_t x321, uint8_t x322 = subborrow_u64(0x0, x308, 0xffffffffffffffefL);
 uint64_t x324, uint8_t x325 = subborrow_u64(x322, x311, 0xffffffffffffffffL);
 uint64_t x327, uint8_t x328 = subborrow_u64(x325, x314, 0xffffffffffffffffL);
 uint64_t x330, uint8_t x331 = subborrow_u64(x328, x317, 0x3f);
 uint64_t _, uint8_t x334 = subborrow_u64(x331, x319, 0x0);
 uint64_t x335 = cmovznz64(x334, x330, x317);
 uint64_t x336 = cmovznz64(x334, x327, x314);
 uint64_t x337 = cmovznz64(x334, x324, x311);
 uint64_t x338 = cmovznz64(x334, x321, x308);
 return (x335, x336, x337, x338))
(x, x0)%core
     : word64 * word64 * word64 * word64 → word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t)

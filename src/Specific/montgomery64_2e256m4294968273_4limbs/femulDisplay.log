λ x x0 : word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x8, x9, x7, x5, (x14, x15, x13, x11))%core,
 uint64_t x17, uint64_t x18 = mulx_u64(x5, x11);
 uint64_t x20, uint64_t x21 = mulx_u64(x5, x13);
 uint64_t x23, uint64_t x24 = mulx_u64(x5, x15);
 uint64_t x26, uint64_t x27 = mulx_u64(x5, x14);
 uint64_t x29, uint8_t x30 = addcarryx_u64(0x0, x18, x20);
 uint64_t x32, uint8_t x33 = addcarryx_u64(x30, x21, x23);
 uint64_t x35, uint8_t x36 = addcarryx_u64(x33, x24, x26);
 uint64_t x38, uint8_t _ = addcarryx_u64(0x0, x36, x27);
 uint64_t x41, uint64_t _ = mulx_u64(x17, 0xd838091dd2253531L);
 uint64_t x44, uint64_t x45 = mulx_u64(x41, 0xfffffffefffffc2fL);
 uint64_t x47, uint64_t x48 = mulx_u64(x41, 0xffffffffffffffffL);
 uint64_t x50, uint64_t x51 = mulx_u64(x41, 0xffffffffffffffffL);
 uint64_t x53, uint64_t x54 = mulx_u64(x41, 0xffffffffffffffffL);
 uint64_t x56, uint8_t x57 = addcarryx_u64(0x0, x45, x47);
 uint64_t x59, uint8_t x60 = addcarryx_u64(x57, x48, x50);
 uint64_t x62, uint8_t x63 = addcarryx_u64(x60, x51, x53);
 uint64_t x65, uint8_t _ = addcarryx_u64(0x0, x63, x54);
 uint64_t _, uint8_t x69 = addcarryx_u64(0x0, x17, x44);
 uint64_t x71, uint8_t x72 = addcarryx_u64(x69, x29, x56);
 uint64_t x74, uint8_t x75 = addcarryx_u64(x72, x32, x59);
 uint64_t x77, uint8_t x78 = addcarryx_u64(x75, x35, x62);
 uint64_t x80, uint8_t x81 = addcarryx_u64(x78, x38, x65);
 uint64_t x83, uint64_t x84 = mulx_u64(x7, x11);
 uint64_t x86, uint64_t x87 = mulx_u64(x7, x13);
 uint64_t x89, uint64_t x90 = mulx_u64(x7, x15);
 uint64_t x92, uint64_t x93 = mulx_u64(x7, x14);
 uint64_t x95, uint8_t x96 = addcarryx_u64(0x0, x84, x86);
 uint64_t x98, uint8_t x99 = addcarryx_u64(x96, x87, x89);
 uint64_t x101, uint8_t x102 = addcarryx_u64(x99, x90, x92);
 uint64_t x104, uint8_t _ = addcarryx_u64(0x0, x102, x93);
 uint64_t x107, uint8_t x108 = addcarryx_u64(0x0, x71, x83);
 uint64_t x110, uint8_t x111 = addcarryx_u64(x108, x74, x95);
 uint64_t x113, uint8_t x114 = addcarryx_u64(x111, x77, x98);
 uint64_t x116, uint8_t x117 = addcarryx_u64(x114, x80, x101);
 uint64_t x119, uint8_t x120 = addcarryx_u64(x117, x81, x104);
 uint64_t x122, uint64_t _ = mulx_u64(x107, 0xd838091dd2253531L);
 uint64_t x125, uint64_t x126 = mulx_u64(x122, 0xfffffffefffffc2fL);
 uint64_t x128, uint64_t x129 = mulx_u64(x122, 0xffffffffffffffffL);
 uint64_t x131, uint64_t x132 = mulx_u64(x122, 0xffffffffffffffffL);
 uint64_t x134, uint64_t x135 = mulx_u64(x122, 0xffffffffffffffffL);
 uint64_t x137, uint8_t x138 = addcarryx_u64(0x0, x126, x128);
 uint64_t x140, uint8_t x141 = addcarryx_u64(x138, x129, x131);
 uint64_t x143, uint8_t x144 = addcarryx_u64(x141, x132, x134);
 uint64_t x146, uint8_t _ = addcarryx_u64(0x0, x144, x135);
 uint64_t _, uint8_t x150 = addcarryx_u64(0x0, x107, x125);
 uint64_t x152, uint8_t x153 = addcarryx_u64(x150, x110, x137);
 uint64_t x155, uint8_t x156 = addcarryx_u64(x153, x113, x140);
 uint64_t x158, uint8_t x159 = addcarryx_u64(x156, x116, x143);
 uint64_t x161, uint8_t x162 = addcarryx_u64(x159, x119, x146);
 uint8_t x163 = (x162 + x120);
 uint64_t x165, uint64_t x166 = mulx_u64(x9, x11);
 uint64_t x168, uint64_t x169 = mulx_u64(x9, x13);
 uint64_t x171, uint64_t x172 = mulx_u64(x9, x15);
 uint64_t x174, uint64_t x175 = mulx_u64(x9, x14);
 uint64_t x177, uint8_t x178 = addcarryx_u64(0x0, x166, x168);
 uint64_t x180, uint8_t x181 = addcarryx_u64(x178, x169, x171);
 uint64_t x183, uint8_t x184 = addcarryx_u64(x181, x172, x174);
 uint64_t x186, uint8_t _ = addcarryx_u64(0x0, x184, x175);
 uint64_t x189, uint8_t x190 = addcarryx_u64(0x0, x152, x165);
 uint64_t x192, uint8_t x193 = addcarryx_u64(x190, x155, x177);
 uint64_t x195, uint8_t x196 = addcarryx_u64(x193, x158, x180);
 uint64_t x198, uint8_t x199 = addcarryx_u64(x196, x161, x183);
 uint64_t x201, uint8_t x202 = addcarryx_u64(x199, x163, x186);
 uint64_t x204, uint64_t _ = mulx_u64(x189, 0xd838091dd2253531L);
 uint64_t x207, uint64_t x208 = mulx_u64(x204, 0xfffffffefffffc2fL);
 uint64_t x210, uint64_t x211 = mulx_u64(x204, 0xffffffffffffffffL);
 uint64_t x213, uint64_t x214 = mulx_u64(x204, 0xffffffffffffffffL);
 uint64_t x216, uint64_t x217 = mulx_u64(x204, 0xffffffffffffffffL);
 uint64_t x219, uint8_t x220 = addcarryx_u64(0x0, x208, x210);
 uint64_t x222, uint8_t x223 = addcarryx_u64(x220, x211, x213);
 uint64_t x225, uint8_t x226 = addcarryx_u64(x223, x214, x216);
 uint64_t x228, uint8_t _ = addcarryx_u64(0x0, x226, x217);
 uint64_t _, uint8_t x232 = addcarryx_u64(0x0, x189, x207);
 uint64_t x234, uint8_t x235 = addcarryx_u64(x232, x192, x219);
 uint64_t x237, uint8_t x238 = addcarryx_u64(x235, x195, x222);
 uint64_t x240, uint8_t x241 = addcarryx_u64(x238, x198, x225);
 uint64_t x243, uint8_t x244 = addcarryx_u64(x241, x201, x228);
 uint8_t x245 = (x244 + x202);
 uint64_t x247, uint64_t x248 = mulx_u64(x8, x11);
 uint64_t x250, uint64_t x251 = mulx_u64(x8, x13);
 uint64_t x253, uint64_t x254 = mulx_u64(x8, x15);
 uint64_t x256, uint64_t x257 = mulx_u64(x8, x14);
 uint64_t x259, uint8_t x260 = addcarryx_u64(0x0, x248, x250);
 uint64_t x262, uint8_t x263 = addcarryx_u64(x260, x251, x253);
 uint64_t x265, uint8_t x266 = addcarryx_u64(x263, x254, x256);
 uint64_t x268, uint8_t _ = addcarryx_u64(0x0, x266, x257);
 uint64_t x271, uint8_t x272 = addcarryx_u64(0x0, x234, x247);
 uint64_t x274, uint8_t x275 = addcarryx_u64(x272, x237, x259);
 uint64_t x277, uint8_t x278 = addcarryx_u64(x275, x240, x262);
 uint64_t x280, uint8_t x281 = addcarryx_u64(x278, x243, x265);
 uint64_t x283, uint8_t x284 = addcarryx_u64(x281, x245, x268);
 uint64_t x286, uint64_t _ = mulx_u64(x271, 0xd838091dd2253531L);
 uint64_t x289, uint64_t x290 = mulx_u64(x286, 0xfffffffefffffc2fL);
 uint64_t x292, uint64_t x293 = mulx_u64(x286, 0xffffffffffffffffL);
 uint64_t x295, uint64_t x296 = mulx_u64(x286, 0xffffffffffffffffL);
 uint64_t x298, uint64_t x299 = mulx_u64(x286, 0xffffffffffffffffL);
 uint64_t x301, uint8_t x302 = addcarryx_u64(0x0, x290, x292);
 uint64_t x304, uint8_t x305 = addcarryx_u64(x302, x293, x295);
 uint64_t x307, uint8_t x308 = addcarryx_u64(x305, x296, x298);
 uint64_t x310, uint8_t _ = addcarryx_u64(0x0, x308, x299);
 uint64_t _, uint8_t x314 = addcarryx_u64(0x0, x271, x289);
 uint64_t x316, uint8_t x317 = addcarryx_u64(x314, x274, x301);
 uint64_t x319, uint8_t x320 = addcarryx_u64(x317, x277, x304);
 uint64_t x322, uint8_t x323 = addcarryx_u64(x320, x280, x307);
 uint64_t x325, uint8_t x326 = addcarryx_u64(x323, x283, x310);
 uint8_t x327 = (x326 + x284);
 uint64_t x329, uint8_t x330 = subborrow_u64(0x0, x316, 0xfffffffefffffc2fL);
 uint64_t x332, uint8_t x333 = subborrow_u64(x330, x319, 0xffffffffffffffffL);
 uint64_t x335, uint8_t x336 = subborrow_u64(x333, x322, 0xffffffffffffffffL);
 uint64_t x338, uint8_t x339 = subborrow_u64(x336, x325, 0xffffffffffffffffL);
 uint64_t _, uint8_t x342 = subborrow_u64(x339, x327, 0x0);
 uint64_t x343 = cmovznz64(x342, x338, x325);
 uint64_t x344 = cmovznz64(x342, x335, x322);
 uint64_t x345 = cmovznz64(x342, x332, x319);
 uint64_t x346 = cmovznz64(x342, x329, x316);
 return (x343, x344, x345, x346))
(x, x0)%core
     : word64 * word64 * word64 * word64 → word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t)
